#include<iostream>
using namespace std;


long long int b[3][3]={{2,5,3},{1,0,0},{0,0,1}};

void recur_matrix(long long int a[3][3],long long int c[3][3],int n,int m)
{
	if(n==1 || n==0 )
	return ;	

	if(n%2==1)
	{	
		if(n==3)
		{return recur_matrix(a,a,2,m);}
		return recur_matrix(a,b,2,m);
	}
	else
	{
		int null[3][3];	
		for(int i=0;i<3;i++)
		for(int j=0;j<3;j++)
		{
			null[i][j]=0;	
			for(int k=0;k<3;k++)		
				null[i][j] += ((a[i][k])*(c[k][j]));		
		}
		
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{a[i][j]=(null[i][j]);}				
		}
		return recur_matrix(a,a,n/2,m);

	}
}


int main()
{
	long long int n,m,ans=0;
	cin>>n>>m;
	long long int a[3][3]={{2,5,3},{1,0,0},{0,0,1}};
	if(n==0)
	{cout<<"1"<<endl;return(0);}
	if(n==1)
	{cout<<"2"<<endl;return(0);}
	if(n==2)
	{cout<<(12%m)<<endl;return(0);}


	if(n>2)
	{
		recur_matrix(a,a,n-1,m);	cout<<a[0][0]<<" "<<a[0][1]<<" "<<a[0][2]<<endl;
		ans = ((2 * a[0][0])+ ( a[0][1]) + (a[0][2]));
	}
	
	cout<<ans<<endl;
	return(0);
}






